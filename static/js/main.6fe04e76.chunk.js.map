{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/Hero.jsx","components/Loader.jsx","pages/Home.jsx","pages/Episodes.jsx","components/Character.jsx","pages/CharacterDetail.jsx","assets/logo.png","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","character","error","className","id","name","status","species","gender","image","src","alt","loading","to","CardList","characters","length","map","Hero","handleSearch","type","placeholder","onChange","Loader","Home","useState","setCharacters","search","setSearch","setLoading","setError","useEffect","a","url","fetch","response","json","data","results","console","log","getCharacters","e","target","value","Episodes","Character","CharacterDetail","useParams","setCharacter","getCharacter","Nav","logo","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fe04e76.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Card = ({character}) => {\r\n    if(character.error) {\r\n        return <div className=\"error\">There are not results!</div>;\r\n    }\r\n    const { id, name, status, species, gender, image } = character;\r\n\r\n    return (\r\n        <div className=\"card border\">\r\n            <div className=\"card__image\">\r\n                <img src={ image } alt={name} loading=\"lazy\" />\r\n            </div>\r\n            <div className=\"card__body\">\r\n            <Link to={`/character/detail/${id}`}> <h2>Name: { name }</h2></Link>\r\n                <p>Status: { status }</p>\r\n                <p>Species: { species }</p>\r\n                <p>Gender: { gender }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({characters}) => {\r\n    return (\r\n        <div className=\"card__container\">\r\n            { \r\n                characters.length > 0 ?\r\n                    characters.map(character => <Card character={character} key={character.id} />)\r\n                :\r\n                    <div className=\"error\">There are not results!</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Hero = ({ handleSearch }) => {\r\n    return (\r\n        <>\r\n            <div className=\"hero\">\r\n                <div className=\"container\">\r\n                    <div className=\"hero__main\">\r\n                        <h3 className=\"subtitle\">Do you know any character?</h3>\r\n                        <input type=\"text\" className=\"search__input\" placeholder=\"Search here!\" onChange={handleSearch} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"bounce1\"></div>\r\n            <div className=\"bounce2\"></div>\r\n            <div className=\"bounce3\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport CardList from '../components/CardList';\r\nimport Hero from '../components/Hero';\r\nimport Loader from '../components/Loader';\r\n\r\nfunction Home() {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    const getCharacters = async () => {\r\n      let url = 'https://rickandmortyapi.com/api/character';\r\n  \r\n      if(search){\r\n        url = `${url}?name=${search}`;\r\n      }\r\n  \r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n  \r\n        data.results ? setCharacters(data.results) : setCharacters([]);\r\n        setError(false);\r\n      } catch (error) {\r\n        console.log(\"Error: \" + error);\r\n        setError(true);\r\n      }\r\n  \r\n      setLoading(false);\r\n    }\r\n    \r\n    getCharacters();\r\n  }, [search]);\r\n  \r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero handleSearch={handleSearch} />\r\n      <div className=\"container\">\r\n        {\r\n          error ? \r\n            <div className=\"error\">There are not results!</div>\r\n          :\r\n            (loading ? <Loader /> : <CardList characters={characters} />)\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","const Episodes = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>This is the page of episodes!</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Episodes;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Character = ({character}) => {\r\n    if(character.error) {\r\n        return <div className=\"error\">There are not results!</div>;\r\n    }\r\n    const { id, name, status, species, gender, image } = character;\r\n\r\n    return (\r\n        <div className=\"card-detail border\">\r\n            <div className=\"card-detail__image\">\r\n                <img src={ image } alt={name} loading=\"lazy\" />\r\n            </div>\r\n            <div className=\"card-detail__body\">\r\n                <h2>Name: { name }</h2>\r\n                <p>Status: { status }</p>\r\n                <p>Species: { species }</p>\r\n                <p>Gender: { gender }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Character;","import { useEffect, useState } from 'react';\r\nimport  { useParams } from 'react-router-dom';\r\nimport Character from '../components/Character';\r\nimport Loader from '../components/Loader';\r\n\r\nconst CharacterDetail = () => {\r\n    let { id } = useParams();\r\n    \r\n    const [character, setCharacter] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    const getCharacter = async () => {\r\n      let url = `https://rickandmortyapi.com/api/character/${id}`;\r\n  \r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        \r\n        setCharacter(data);\r\n      } catch (error) {\r\n        console.log(\"Error: \" + error);\r\n      }\r\n  \r\n      setLoading(false);\r\n    }\r\n    \r\n    getCharacter();\r\n  }, [id]);\r\n\r\n    return (\r\n        <div className=\"container container--modifier\">\r\n            {\r\n              loading ? \r\n                <Loader /> \r\n              : \r\n                <Character character={character} />\r\n            }\r\n        </div>\r\n    )  \r\n}\r\n\r\n\r\nexport default CharacterDetail;","export default __webpack_public_path__ + \"static/media/logo.df73b7db.png\";","import React from 'react';\r\nimport logo from '../assets/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <header>\r\n            <nav className=\"nav\">\r\n                <div className=\"container__nav\">\r\n                    <Link to=\"/\">\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </Link>\r\n                    <div className=\"nav__links\">\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav;","import Home from './pages/Home';\nimport Episodes from './pages/Episodes';\nimport CharacterDetail from './pages/CharacterDetail';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n      <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/about\">\n          <Episodes />\n        </Route>\n        <Route exact path=\"/character/detail/:id\">\n          <CharacterDetail />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}